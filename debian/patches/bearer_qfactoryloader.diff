Description: make the bearer QFactoryLoader a member variable, not a static
 Because it was a function-level static, the QFactoryLoader was getting
 destroyed out-of-sync with the bearer thread stopping. Under normal
 conditions, the thread stopped first (~QApplication / ~QCoreApplication
 via qAddPostRoutine), and the static got destroyed when the process
 exited. However, if QApplication leaked or if the destruction order is
 wonky (as seen in PyQt5), the thread could still be running when the
 plugins were already unloaded.
 .
 With the loader a member variable, it gets destroyed when the thread
 stops.
Origin: upstream, https://code.qt.io/cgit/qt/qtbase.git/commit/?id=7c402ad3d15ff5e7
Last-Update: 2017-01-04

--- a/src/network/bearer/qnetworkconfigmanager_p.cpp
+++ b/src/network/bearer/qnetworkconfigmanager_p.cpp
@@ -40,8 +40,6 @@
 #include "qnetworkconfigmanager_p.h"
 #include "qbearerplugin_p.h"
 
-#include <QtCore/private/qfactoryloader_p.h>
-
 #include <QtCore/qdebug.h>
 #include <QtCore/qtimer.h>
 #include <QtCore/qstringlist.h>
@@ -60,7 +58,9 @@
 QT_BEGIN_NAMESPACE
 
 QNetworkConfigurationManagerPrivate::QNetworkConfigurationManagerPrivate()
-    : QObject(), pollTimer(0), mutex(QMutex::Recursive), forcedPolling(0), firstUpdate(true)
+    : QObject(), pollTimer(0), mutex(QMutex::Recursive),
+      loader(QBearerEngineFactoryInterface_iid, QLatin1String("/bearer")),
+      forcedPolling(0), firstUpdate(true)
 {
     qRegisterMetaType<QNetworkConfiguration>();
     qRegisterMetaType<QNetworkConfigurationPrivatePointer>();
@@ -365,7 +365,6 @@
         bool envOK  = false;
         const int skipGeneric = qEnvironmentVariableIntValue("QT_EXCLUDE_GENERIC_BEARER", &envOK);
         QBearerEngine *generic = 0;
-        static QFactoryLoader loader(QBearerEngineFactoryInterface_iid, QLatin1String("/bearer"));
         QFactoryLoader *l = &loader;
         const PluginKeyMap keyMap = l->keyMap();
         const PluginKeyMapConstIterator cend = keyMap.constEnd();
--- a/src/network/bearer/qnetworkconfigmanager_p.h
+++ b/src/network/bearer/qnetworkconfigmanager_p.h
@@ -54,6 +54,7 @@
 #include "qnetworkconfigmanager.h"
 #include "qnetworkconfiguration_p.h"
 
+#include <QtCore/private/qfactoryloader_p.h>
 #include <QtCore/qmutex.h>
 #include <QtCore/qset.h>
 
@@ -117,6 +118,7 @@
 private:
     mutable QMutex mutex;
 
+    QFactoryLoader loader;
     QList<QBearerEngine *> sessionEngines;
 
     QSet<QString> onlineConfigurations;
