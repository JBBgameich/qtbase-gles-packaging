Description: worksaround a workaround done for other distros
 Upstream ships a workaround for other distros's paths that Debian
 doesn't have. This turned out to break CMake support in multiarch systems.
 This patch simply comments out the line that tries to detect the need of
 the workaround.
 .
 This patch should be considered Debian-only and a hack. A proper fix like
 detecting multi archs paths with ${CMAKE_LIBRARY_ARCHITECTURE} should be
 used instead.
Bug: https://bugreports.qt-project.org/browse/QTBUG-33223
Forwarded: not-needed
Author: Lisandro Damián Nicanor Pérez Meyer <lisandro@debian.org>

--- a/mkspecs/features/create_cmake.prf
+++ b/mkspecs/features/create_cmake.prf
@@ -28,7 +28,8 @@ CMAKE_PARTIAL_MODULE_DEPS = $$replace(CM
 # that to an absolute path. This is only done for installations to
 # the /usr or / prefix.
 CMAKE_INSTALL_LIBS_DIR = $$cmakeTargetPath($$[QT_INSTALL_LIBS])
-contains(CMAKE_INSTALL_LIBS_DIR, ^(/usr)?/lib(64)?.*): CMAKE_USR_MOVE_WORKAROUND = $$CMAKE_INSTALL_LIBS_DIR
+# Workaround Qt BUG https://bugreports.qt-project.org/browse/QTBUG-33223
+#contains(CMAKE_INSTALL_LIBS_DIR, ^(/usr)?/lib(64)?.*): CMAKE_USR_MOVE_WORKAROUND = $$CMAKE_INSTALL_LIBS_DIR
 
 CMAKE_INCLUDE_DIR = $$cmakeRelativePath($$[QT_INSTALL_HEADERS], $$[QT_INSTALL_PREFIX])
 contains(CMAKE_INCLUDE_DIR, "^\\.\\./.*") {
